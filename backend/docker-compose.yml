version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - /var/lib/rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    env_file:
      - .env
    networks:
      - shared_network

  consumer:
    container_name: consumer
    build:
      context: ./
      dockerfile: ./apps/consumer/Dockerfile
    ports:
      - '3000:3000'
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - shared_network
    command: npm run start:dev consumer

  producer:
    container_name: producer
    build:
      context: ./
      dockerfile: ./apps/producer/Dockerfile
    ports:
      - '3001:3001'
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - shared_network
    command: npm run start:dev producer

  postgres:
    image: postgres
    container_name: postgres
    env_file:
      - .env
    environment:
      POSTGRES_DB: '${POSTGRES_DB}'
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
    ports:
      - '5433:5432'
    volumes:
      - ./db/data:/var/lib/postgresql/data
    networks:
      - shared_network


networks:
  shared_network: {}